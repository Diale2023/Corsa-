import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { CheckCircle, Clock, FileText } from "lucide-react";
import { motion } from "framer-motion";
import { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from "recharts";

const workouts = [
  {
    day: "Lunedì",
    title: "Corsa Intervallata",
    timer: "16 min",
    video: "https://www.youtube.com/watch?v=ml6cT4AZdqI",
  },
  {
    day: "Mercoledì",
    title: "Corpo Libero Cardio/Forza",
    timer: "30 min",
    video: "https://www.youtube.com/watch?v=UBMk30rjy0o",
  },
  {
    day: "Venerdì",
    title: "Corsa Progressiva + Sprint",
    timer: "25 min",
    video: "https://www.youtube.com/watch?v=5gk6CkP0j4s",
  },
  {
    day: "Domenica",
    title: "Tecnica/Cardio Leggero",
    timer: "30-40 min",
    video: "https://www.youtube.com/watch?v=lx9ZBZEDz5E",
  },
];

export default function TrackerAllenamento() {
  const [completed, setCompleted] = useState({});
  const [notes, setNotes] = useState({});

  const toggleComplete = (index) => {
    setCompleted((prev) => ({ ...prev, [index]: !prev[index] }));
  };

  const handleNoteChange = (index, value) => {
    setNotes((prev) => ({ ...prev, [index]: value }));
  };

  const chartData = workouts.map((workout, index) => ({
    name: workout.day,
    Completato: completed[index] ? 1 : 0,
  }));

  return (
    <div className="grid gap-6 p-4">
      <div className="w-full h-60">
        <ResponsiveContainer width="100%" height="100%">
          <BarChart data={chartData}>
            <XAxis dataKey="name" />
            <YAxis allowDecimals={false} />
            <Tooltip />
            <Bar dataKey="Completato" fill="#10b981" barSize={40} />
          </BarChart>
        </ResponsiveContainer>
      </div>

      {workouts.map((workout, index) => (
        <motion.div
          key={index}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.3 }}
        >
          <Card className={`transition-all ${completed[index] ? "bg-green-100" : ""}`}>
            <CardContent className="flex flex-col gap-2 p-4">
              <div className="flex items-center justify-between">
                <h2 className="text-xl font-bold">{workout.day}: {workout.title}</h2>
                <Button variant="outline" onClick={() => toggleComplete(index)}>
                  {completed[index] ? <CheckCircle className="text-green-600" /> : "Completa"}
                </Button>
              </div>
              <div className="flex items-center gap-2 text-gray-600">
                <Clock size={18} />
                <span>{workout.timer}</span>
              </div>
              <a
                href={workout.video}
                target="_blank"
                rel="noopener noreferrer"
                className="text-blue-600 underline"
              >
                Guarda il video
              </a>
              <div className="mt-2">
                <label className="text-sm font-semibold flex items-center gap-1">
                  <FileText size={16} /> Note personali
                </label>
                <textarea
                  value={notes[index] || ""}
                  onChange={(e) => handleNoteChange(index, e.target.value)}
                  className="w-full p-2 mt-1 rounded-md border border-gray-300"
                  rows="3"
                  placeholder="Scrivi qui i tuoi progressi, difficoltà o motivazione..."
                />
              </div>
            </CardContent>
          </Card>
        </motion.div>
      ))}
    </div>
  );
}
